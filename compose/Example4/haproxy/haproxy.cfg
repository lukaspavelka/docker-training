global
  log stdout local0 # Log to stdout for easier container logging
  log stdout local1 notice
  maxconn 4096
  # daemon # Remove daemon mode to run in foreground, better for containers

defaults
  log global
  mode http
  option httplog
  option dontlognull
  timeout connect 5s # Shorter timeouts for demo purposes
  timeout client 30s
  timeout server 30s
  # option forwardfor # Ensure this is needed; X-Forwarded-For
  # default-server init-addr last,libc,none # For DNS resolution behavior with newer HAProxy

listen stats
  bind *:70 # Listen on all interfaces for stats page (host port mapped to 7070 in compose)
  mode http
  stats enable
  stats hide-version
  stats realm Haproxy\ Statistics
  stats uri /
  stats auth user:StrongPassword # IMPORTANT: Change 'user:StrongPassword'

frontend http_frontend
  bind *:80
  mode http
  default_backend web_backend_servers

backend web_backend_servers
  mode http
  balance roundrobin
  # When 'web' service is scaled (e.g., docker compose up --scale web=3),
  # Docker's embedded DNS will resolve 'web' to the IPs of the available containers.
  # HAProxy will then distribute traffic among them.
  # The port 8000 should match the port exposed by the web service containers.
  # For HAProxy 2.4+, using 'web' once might be enough if HAProxy's DNS resolver
  # is configured to get all A records. Adding multiple lines can help ensure
  # HAProxy tries to connect to multiple distinct IPs if DNS returns them.
  # Alternatively, use server-template for more dynamic scaling if many instances.
  server web_instance1 web:8000 check
  server web_instance2 web:8000 check
  server web_instance3 web:8000 check
  # Add more lines like above if you expect to scale to more instances,
  # or explore server-template for more dynamic backends with newer HAProxy versions.
  
  option httpchk GET / # HTTP health check
  http-check expect status 200
